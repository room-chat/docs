{
  "openapi": "3.0.2",
  "info": {
    "title": "API room-chat",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:4001"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "description": "",
      "name": "User"
    }
  ],
  "paths": {
    "/authorized-user": {
      "post": {
        "description": "the api get information specific user",
        "tags": ["User"],
        "requestBody": {
          "$ref": "#/components/requestBodies/GetUserBodyRequest"
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInformationRes"
                }
              }
            }
          },
          "404": {
            "description": "The use not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "401": {
            "description": "The user not access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "parameters": {},
    "requestBodies": {
      "GetUserBodyRequest": {
        "description": "User body request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "ExampleUser@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "password"
                }
              },
              "required": ["email", "password"]
            }
          }
        }
      }
    },
    "schemas": {
      "NotFound": {
        "description": "Result when not found any data",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "404"
          },
          "message": {
            "type": "string",
            "example": "Not Found"
          }
        },
        "required": ["code", "message"]
      },
      "BadRequest": {
        "description": "Result when error occur",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "400"
          },
          "message": {
            "type": "string",
            "example": "Bad Request"
          }
        },
        "required": ["code", "message"]
      },
      "InternalServer": {
        "description": "Result when server have error",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "500"
          },
          "message": {
            "type": "string",
            "example": "Internal Server"
          }
        },
        "required": ["code", "message"]
      },
      "Unauthorized": {
        "description": "The user don't have permission",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "401"
          },
          "message": {
            "type": "string",
            "example": "Unauthorized"
          }
        },
        "required": ["code", "message"]
      },
      "UserInformationRes": {
        "description": "Body object of User",
        "type": "object",
        "properties": {
          "userId": {
            "description": "The userId show number of user",
            "type": "number",
            "example": 1
          },
          "email": {
            "description": "The email of user",
            "type": "string",
            "example": "ExampleUser@example.com"
          },
          "address": {
            "description": "The address show where user live",
            "type": "string",
            "example": "24A Kofi Kington"
          },
          "dayOfbirth": {
            "description": "The birthday show birthday of user",
            "type": "string",
            "example": "2023-12-22"
          },
          "firstName": {
            "description": "First name of user",
            "type": "string",
            "example": "Tony"
          },
          "lastName": {
            "description": "Last name of user",
            "type": "string",
            "example": "Stark"
          }
        },
        "required": ["userId", "email", "address", "dayOfbirth", "firstName", "lastName"]
      }
    }
  }
}
